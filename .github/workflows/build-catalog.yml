name: Build Catalog Index
on:
  push:
    branches: [ main ]
    paths:
      - 'registry/**'
      - 'site/**'
      - '.github/workflows/build-catalog.yml'
  workflow_dispatch:

# даём права и на билд, и на деплой (в одном run'е)
permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: false
      - name: Build aggregated index
        shell: bash
        run: |
          set -e
          mkdir -p dist/site dist/registry
          rsync -a site/ dist/site/
          jq -c . registry/servers.index.json > dist/registry/servers.index.json
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
name: Link Check
on:
  pull_request:
    paths:
      - '**/*.md'
      - 'site/**/*.html'
jobs:
  lychee:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: false
      - uses: lycheeverse/lychee-action@v2
        with:
          args: --no-progress --max-redirects 5 --accept 200,206,429 --retry-wait-time 2 --retry-count 2 .
name: Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 1
          submodules: false    # важно: не трогаем субмодули, чтобы не падать на mcp-registry
      - name: Ensure site exists
        run: |
          test -d site || { echo "ERROR: site/ not found"; exit 1; }
          # отключим Jekyll на всякий
          touch site/.nojekyll
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
name: PR Labeler
on:
  pull_request_target:
    types: [opened, reopened, synchronize, edited, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v6
        with:
          configuration-path: .github/labeler.yml
          sync-labels: false
name: Release Drafter
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, reopened, synchronize, closed]
permissions:
  contents: write
  pull-requests: write
jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Generate Sitemap
on:
  workflow_run:
    workflows: ["Pages"]
    types: [completed]
permissions:
  contents: write
jobs:
  sitemap:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: false
      - name: Build simple sitemap from /site
        run: |
          base="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          find site -name '*.html' -printf "%P\n" | awk -v b="$base" 'BEGIN{print "<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">"} {printf "<url><loc>%s%s</loc></url>\n", b, $0} END{print "</urlset>"}' > site/sitemap.xml
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add site/sitemap.xml
          git commit -m "chore: update sitemap.xml" || echo "no changes"
          git push
name: Stale
on:
  schedule: [{ cron: '0 3 * * *' }]
permissions:
  issues: write
  pull-requests: write
jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@v10
        with:
          days-before-stale: 30
          days-before-close: 14
          stale-issue-message: "This issue is stale. Please comment to keep it open."
          stale-pr-message: "This PR is stale. Please update or comment."
          exempt-issue-labels: "pinned,roadmap"
          exempt-pr-labels: "pinned"
name: Validate

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

        with:
          submodules: false
      - uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: Build (optional) merged index
        if: ${{ hashFiles('tools/merge-index.mjs') != '' }}
        run: node tools/merge-index.mjs

      - name: Validate index (draft-07)
        run: node tools/validate-index.mjs

      - name: Validate local manifests (draft-07)
        run: node tools/validate-manifests.mjs
